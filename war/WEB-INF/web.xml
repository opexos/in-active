<web-app xmlns="http://java.sun.com/xml/ns/j2ee"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd"
    version="2.4">
    
    
    <!-- Different background services -->
    <listener>
        <listener-class>com.app.server.Init</listener-class>
    </listener>    
     
    <listener>
        <listener-class>com.app.server.ConfigDownload</listener-class>
    </listener>
    
    <listener>
        <listener-class>com.app.server.HistoryCleaner</listener-class>
    </listener>
    
    <listener>
        <listener-class>com.app.server.PortsInfoRefresh</listener-class>
    </listener>    
    
    <listener>
        <listener-class>com.app.server.MailSender</listener-class>
    </listener>
        


    <!-- CompressionFilter for dynamic compression -->
    <filter>
        <filter-name>CompressionFilter</filter-name>
        <filter-class>com.isomorphic.servlet.CompressionFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>CompressionFilter</filter-name>
        <servlet-name>IDACall</servlet-name>
    </filter-mapping>  
    
    
    <!-- Disable caching. Modify response headers. -->  
    <filter>
        <filter-name>NoCacheFilter</filter-name>
        <filter-class>com.app.server.NoCacheFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>NoCacheFilter</filter-name>
        <servlet-name>ImageFromDB</servlet-name>
    </filter-mapping>
    <filter-mapping>
        <filter-name>NoCacheFilter</filter-name>
        <servlet-name>/app/*</servlet-name>
    </filter-mapping>
    <filter-mapping>
        <filter-name>NoCacheFilter</filter-name>
        <servlet-name>/cm/*</servlet-name>
    </filter-mapping>
    <filter-mapping>
        <filter-name>NoCacheFilter</filter-name>
        <servlet-name>/js/*</servlet-name>
    </filter-mapping>

   
    <!-- The IDACall servlet handles all Built-in DataSource operations -->
    <servlet>
        <servlet-name>IDACall</servlet-name>
        <servlet-class>com.app.server.IDACall</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>IDACall</servlet-name>
        <url-pattern>/app/sc/IDACall/*</url-pattern>
    </servlet-mapping>
    
    
    <!-- Check session, and allow call IDACall for authorized users only -->
    <filter>
        <filter-name>SessionCheckFilter</filter-name>
        <filter-class>com.app.server.SessionCheckFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>SessionCheckFilter</filter-name>
        <servlet-name>IDACall</servlet-name>
    </filter-mapping>
    

    <!-- The ImageFromDB servlet get images from database -->    
    <servlet>
        <servlet-name>ImageFromDB</servlet-name>
        <servlet-class>com.app.server.ImageFromDB</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>ImageFromDB</servlet-name>
        <url-pattern>/images/*</url-pattern>
    </servlet-mapping>
    


    <!-- The DataSourceLoader servlet returns Javascript representations of the dataSources whose
         ID's are passed to it - it is an alternative to using the <loadDS> JSP tag -->
    <servlet>
        <servlet-name>DataSourceLoader</servlet-name>
        <servlet-class>com.isomorphic.servlet.DataSourceLoader</servlet-class>
    </servlet>    
    <servlet-mapping>
        <servlet-name>DataSourceLoader</servlet-name>
        <url-pattern>/app/sc/DataSourceLoader</url-pattern>
    </servlet-mapping>
    

    <!-- The FileDownload servlet downloads static files, like a webserver -->
    <!-- Use FileDownload servlet to download all static content that's part of the skin, such as
         image files, so we can set Expires headers and other cache control directives.  In a
         production deployment, you'd want to use a webserver such as Apache to do this.  
    -->
    <!-- 
    <servlet>
        <servlet-name>FileDownload</servlet-name>
        <servlet-class>com.isomorphic.servlet.FileDownload</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>FileDownload</servlet-name>
        <url-pattern>/theme/*</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>FileDownload</servlet-name>
        <url-pattern>/app/sc/*</url-pattern>
    </servlet-mapping>
     -->


	<!-- ISC init: initializes ISC framework -->
    <servlet>
        <servlet-name>Init</servlet-name>
        <servlet-class>com.isomorphic.base.Init</servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>
	  

	<!--  
    <servlet>
        <servlet-name>HttpProxy</servlet-name>
        <servlet-class>com.isomorphic.servlet.HttpProxyServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>HttpProxy</servlet-name>
        <url-pattern>/app/sc/HttpProxy/*</url-pattern>
    </servlet-mapping>
    -->


    <!-- General config -->
    <session-config>
        <session-timeout>30</session-timeout>
    </session-config>

    <jsp-config>
        <!-- Isomorphic JSP tags -->
        <taglib>
            <taglib-uri>isomorphic</taglib-uri> 
            <taglib-location>/WEB-INF/iscTaglib.xml</taglib-location> 
        </taglib>
    </jsp-config>

    <mime-mapping>
        <extension>manifest</extension>
        <mime-type>text/cache-manifest</mime-type>
    </mime-mapping>
    
    <login-config>
		<auth-method>FORM</auth-method>
		<realm-name>AppRealm</realm-name>
		<form-login-config>
			<form-login-page>/login.jsp</form-login-page>
			<form-error-page>/error.jsp</form-error-page>
		</form-login-config>
    </login-config>

    <security-role>
		<role-name>admin</role-name>
    </security-role>
    <security-role>
		<role-name>user</role-name>
    </security-role>    
     
	<security-constraint>
		<web-resource-collection>
			<web-resource-name>public</web-resource-name>
			<!-- SessionCheckFilter checks IDACall servlet. 
			     Servlet described as public because Apache Tomcat receive double request,  
			     if the session is timed out and there was a re-authorization. -->
			<url-pattern>/app/sc/IDACall/*</url-pattern> 			
			<url-pattern>/js/*</url-pattern>
			<url-pattern>/theme/*</url-pattern>
		</web-resource-collection>
	</security-constraint>       
    
	<security-constraint>
		<web-resource-collection>
			<web-resource-name>secure</web-resource-name>
			<url-pattern>/*</url-pattern>
		</web-resource-collection>
		
		<auth-constraint>
			<role-name>admin</role-name>
			<role-name>user</role-name>
		</auth-constraint>
		
		<user-data-constraint>    
			<transport-guarantee>CONFIDENTIAL</transport-guarantee>   
		</user-data-constraint>     
	</security-constraint>
    
    <welcome-file-list>
        <welcome-file>main.jsp</welcome-file>
    </welcome-file-list>    

</web-app>